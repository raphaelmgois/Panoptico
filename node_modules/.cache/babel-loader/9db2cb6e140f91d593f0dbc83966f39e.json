{"ast":null,"code":"var _jsxFileName = \"/home/calindra/Documentos/my-app/src/Components/Localize.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nexport default class Localize extends Component {\n  constructor() {\n    super();\n\n    this.onClickHandler = e => {\n      console.log('onclickHandler', e.target.pressed);\n      this.setState({\n        pressed: !this.state.pressed\n      });\n    };\n\n    this.state = {\n      isOpen: false\n    };\n    this.timeOutId = null;\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.onBlurHandler = this.onBlurHandler.bind(this);\n    this.onFocusHandler = this.onFocusHandler.bind(this); // super()\n\n    this.state = {\n      Snapshot: null,\n      photoCollection: []\n    };\n  }\n\n  onClickHandler() {\n    this.setState(currentState => ({\n      isOpen: !currentState.isOpen\n    }));\n  } // We close the popover on the next tick by using setTimeout.\n  // This is necessary because we need to first check if\n  // another child of the element has received focus as\n  // the blur event fires prior to the new focus event.\n\n\n  onBlurHandler() {\n    this.timeOutId = setTimeout(() => {\n      this.setState({\n        isOpen: false\n      });\n    });\n  } // If a child receives focus, do not close the popover.\n\n\n  onFocusHandler() {\n    clearTimeout(this.timeOutId);\n  }\n\n  render() {\n    const Icon = icon => {\n      return React.createElement(\"img\", {\n        src: 'https://icon-library.net/images/location-png-icon/location-png-icon-12.jpg',\n        style: styleIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    };\n\n    const styleIcon = {\n      width: '50px',\n      fontSIze: '15px',\n      textAlign: 'center',\n      marginBottom: \"5px\",\n      marginRight: \"10px\",\n      fontWeight: 'bold'\n    };\n    const inner = {\n      display: 'none',\n      transition: '1s',\n      padding: '12px 16px',\n      zIndex: 999,\n      backgroundColor: '#ff0000'\n    };\n    const ButtonStyle = {\n      width: '100%',\n      height: '66px',\n      fontSIze: '15px',\n      textAlign: 'center',\n      backgroundColor: '#ffbf00',\n      color: \"#ffffff\"\n    };\n    const show = {\n      width: '100%',\n      transition: '1s',\n      minHeight: 80,\n      display: 'block',\n      backgroundColor: '#ededed',\n      boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n      padding: '16px 16px',\n      zIndex: 9999\n    };\n    const imageStyle = {\n      width: '100%'\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onBlur: this.onBlurHandler,\n      onFocus: this.onFocusHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: ButtonStyle,\n      onClick: this.onClickHandler,\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": this.state.isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), \"Onde estou?\")), React.createElement(\"div\", {\n      // onClick={disabled ? false : this.onClickHandler}\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: this.state.pressed ? show : inner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.state.pressed ? React.createElement(\"div\", {\n      style: imageStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: imageStyle,\n      src: 'https://upload.wikimedia.org/wikipedia/commons/b/b1/Morro_dos_Prazeres_%28RJ%29_-_Map.png',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })) : null)));\n  }\n\n}\nLocalize.propTypes = {\n  onClick: PropTypes.func,\n  pressed: PropTypes.bool,\n  disabled: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  isFullscreen: PropTypes.bool,\n  photoCollection: PropTypes.array\n};\nLocalize.defaultProps = {\n  width: 60,\n  height: 20,\n  title: '-Dropdown-Button-',\n  onClick: () => {\n    console.log(' onClick');\n  }\n};","map":{"version":3,"sources":["/home/calindra/Documentos/my-app/src/Components/Localize.js"],"names":["PropTypes","React","Component","Button","Localize","constructor","onClickHandler","e","console","log","target","pressed","setState","state","isOpen","timeOutId","bind","onBlurHandler","onFocusHandler","Snapshot","photoCollection","currentState","setTimeout","clearTimeout","render","Icon","icon","styleIcon","width","fontSIze","textAlign","marginBottom","marginRight","fontWeight","inner","display","transition","padding","zIndex","backgroundColor","ButtonStyle","height","color","show","minHeight","boxShadow","imageStyle","propTypes","onClick","func","bool","disabled","title","oneOfType","string","number","isFullscreen","array","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\n\n\nexport default class Localize extends Component {\n\n    constructor() {\n        super()\n\n        this.state = { isOpen: false }\n        this.timeOutId = null\n\n        this.onClickHandler = this.onClickHandler.bind( this )\n        this.onBlurHandler = this.onBlurHandler.bind( this )\n        this.onFocusHandler = this.onFocusHandler.bind( this )\n        // super()\n        this.state = {\n            Snapshot: null,\n            photoCollection: []\n        }\n    }\n    onClickHandler () {\n        this.setState( currentState => ( {\n            isOpen: !currentState.isOpen\n        } ) )\n    }\n\n    // We close the popover on the next tick by using setTimeout.\n    // This is necessary because we need to first check if\n    // another child of the element has received focus as\n    // the blur event fires prior to the new focus event.\n    onBlurHandler () {\n        this.timeOutId = setTimeout( () => {\n            this.setState( {\n                isOpen: false\n            } )\n        } )\n    }\n\n    // If a child receives focus, do not close the popover.\n    onFocusHandler () {\n        clearTimeout( this.timeOutId )\n    }\n    \n\n    static propTypes = {\n        onClick: PropTypes.func,\n        pressed: PropTypes.bool,\n        disabled: PropTypes.bool,\n        title: PropTypes.oneOfType( [ PropTypes.string, PropTypes.number ] ),\n        isFullscreen: PropTypes.bool,\n        photoCollection: PropTypes.array\n    }\n\n    static defaultProps = {\n        width: 60,\n        height: 20,\n        title: '-Dropdown-Button-',\n        onClick: () => {\n            console.log( ' onClick' )\n        }\n    }\n\n    onClickHandler = e => {\n        console.log( 'onclickHandler', e.target.pressed )\n        this.setState( { pressed: !this.state.pressed } )\n    }\n \n    render () {\n\n        const Icon = ( icon ) => {\n\n\n            return (\n\n                <img src={ 'https://icon-library.net/images/location-png-icon/location-png-icon-12.jpg' } style={ styleIcon } />\n\n            )\n\n        }\n\n        const styleIcon = {\n            width: '50px',\n            fontSIze: '15px',\n            textAlign: 'center',\n            marginBottom: \"5px\",\n            marginRight: \"10px\",\n            fontWeight: 'bold'\n        }\n\n        const inner = {\n            display: 'none',\n            transition: '1s',\n            padding: '12px 16px',\n            zIndex: 999,\n            backgroundColor: '#ff0000'\n        }\n\n        const ButtonStyle = {\n            width: '100%',\n            height: '66px',\n            fontSIze: '15px',\n            textAlign: 'center',\n            backgroundColor: '#ffbf00',\n            color:\"#ffffff\"\n        }\n\n        const show = {\n            width: '100%',\n            transition: '1s',\n            minHeight: 80,\n            display: 'block',\n            backgroundColor: '#ededed',\n            boxShadow:\n                '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n            padding: '16px 16px',\n            zIndex: 9999\n        }\n\n        const imageStyle = {\n            width: '100%',\n           \n        }\n\n       \n        return (\n            <div>\n                <div onBlur={ this.onBlurHandler } onFocus={ this.onFocusHandler }>\n                    <Button\n                        style={ ButtonStyle }\n                        onClick={ this.onClickHandler }\n                        aria-haspopup='true'\n                        aria-expanded={ this.state.isOpen }>\n                        <Icon/>Onde estou?\n\t\t\t\t\t</Button>\n                </div>\n                <div\n                    // onClick={disabled ? false : this.onClickHandler}\n                    className='App'>\n                    {/* <span style={capture}>Capturar</span> */ }\n                    <div style={ this.state.pressed ? show : inner }>\n                        { this.state.pressed ? (\n                            <div style={ imageStyle }><img style={ imageStyle} src={ 'https://upload.wikimedia.org/wikipedia/commons/b/b1/Morro_dos_Prazeres_%28RJ%29_-_Map.png' } /></div>\n                        ) : null }\n\n                    </div>\n\n\n                </div>\n\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}